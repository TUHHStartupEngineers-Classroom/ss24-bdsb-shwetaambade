{
  "hash": "3b26ffbede9eacd740d7ff79304e75e4",
  "result": {
    "markdown": "---\ntitle: \"Data Acquisition\"\nauthor: \"Shweta Ambade\"\n---\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-1_e275052bf2ed0f2b7736e0d4907de669'}\n\n```{.r .cell-code}\n#API Challenge\n# Load packages\nlibrary(httr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'httr' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(jsonlite)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'jsonlite' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\n# API key for OpenWeatherMap\napi_key <- \"1b974d3ef182f3948d75d15456fbbd20\"\n\n# List of German cities\ngerman_cities <- c(\"Berlin\", \"Hamburg\", \"Munich\", \"Cologne\", \"Frankfurt\", \"Stuttgart\", \"Düsseldorf\", \"Dortmund\", \"Essen\", \"Leipzig\")\n\n# Function to fetch weather data for a city\nfetch_weather <- function(city) {\n  # API endpoint\n  url <- paste0(\"https://api.openweathermap.org/data/2.5/weather?q=\", city, \"&appid=\", api_key)\n  \n  # Make GET request to API\n  response <- GET(url)\n  \n  # Check if request was successful\n  if (http_type(response) == \"application/json\") {\n    # Parse JSON response\n    weather_data <- content(response, \"text\", encoding = \"UTF-8\")\n    \n    # Convert JSON to list\n    weather_list <- fromJSON(weather_data)\n    \n    # Extract relevant information\n    if (\"main\" %in% names(weather_list) && \"weather\" %in% names(weather_list)) {\n      temperature <- weather_list$main$temp - 273.15  # Convert temperature from Kelvin to Celsius\n      humidity <- weather_list$main$humidity\n      weather_description <- weather_list$weather[1, \"description\"]\n      \n      # Create dataframe to store weather information\n      weather_df <- data.frame(\n        \"City\" = city,\n        \"Temperature (°C)\" = temperature,\n        \"Humidity (%)\" = humidity,\n        \"Description\" = weather_description\n      )\n      \n      return(weather_df)\n    } else {\n      cat(\"Failed to extract relevant information from the response for\", city, \"\\n\")\n      return(NULL)\n    }\n  } else {\n    cat(\"Failed to fetch weather data for\", city, \"\\n\")\n    return(NULL)\n  }\n}\n\n# Fetch weather data for each city\nweather_data_list <- lapply(german_cities, fetch_weather)\n\n# Combine weather data for all cities into a single dataframe\nweather_all <- do.call(rbind, weather_data_list)\n\n# Print weather dataframe\nprint(weather_all)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>          City Temperature...C. Humidity....      Description\n#> 1      Berlin            20.89           63 scattered clouds\n#> 2     Hamburg            20.75           59       few clouds\n#> 3      Munich            19.93           57       few clouds\n#> 4     Cologne            18.29           75    broken clouds\n#> 5   Frankfurt            17.47           81       few clouds\n#> 6   Stuttgart            17.93           67 scattered clouds\n#> 7  Düsseldorf            18.44           76  overcast clouds\n#> 8    Dortmund            19.04           70    broken clouds\n#> 9       Essen            19.08           72    broken clouds\n#> 10    Leipzig            19.63           66    broken clouds\n```\n:::\n:::\n\n::: {.cell hash='02_data_acquisition_cache/html/unnamed-chunk-2_3bf6da481efaf7bd848caccec1434521'}\n\n```{.r .cell-code}\n#Web Scraping\n#Load necessary libraries\n\nlibrary(tidyverse) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'tidyverse' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'ggplot2' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'tidyr' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'readr' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'dplyr' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'lubridate' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.4     ✔ readr     2.1.5\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n#> ✔ purrr     1.0.2     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter()  masks stats::filter()\n#> ✖ purrr::flatten() masks jsonlite::flatten()\n#> ✖ dplyr::lag()     masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(rvest)     \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'rvest'\n#> \n#> The following object is masked from 'package:readr':\n#> \n#>     guess_encoding\n```\n:::\n\n```{.r .cell-code}\nlibrary(xopen)     \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'xopen' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(jsonlite)  \nlibrary(glue)      \nlibrary(stringi)   \n\nurl_home <- \"https://www.rosebikes.de/fahrr%C3%A4der/mtb\"\n# Open links directly from RStudio to inspect them\n\nhtml_home <- read_html(url_home) # Read in the HTML for the entire web page\n\n# data scraping from the web page for  the bike models \n# Scrape the bike model names\nbike_model <- html_home %>%\n  html_nodes(css = \".basic-headline.basic-headline--no-margin.basic-headline--small.basic-headline--left\")%>%\n  html_text() %>%\n  str_remove_all(\"\\n\")\nbike_model\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  [1] \"PDQ            \"              \"COUNT SOLO            \"      \n#>  [3] \"THRILL HILL            \"      \"GROUND CONTROL            \"  \n#>  [5] \"ROOT MILLER            \"      \"BONERO            \"          \n#>  [7] \"SCRUB            \"            \"THE BRUCE            \"       \n#>  [9] \"ROOT MILLER PLUS            \" \"BONERO PLUS            \"\n```\n:::\n\n```{.r .cell-code}\n# data scraping from the web page for  the bike prices\nbike_price <- html_home %>%\n  html_nodes(css = \".catalog-category-bikes__price-title\") %>%\n  html_text() %>%\n  \n  str_remove_all(\"\\\\.\") %>%\n  stringr::str_replace_all(pattern = \"\\nab \", replacement = \"\") %>%\n  stringr::str_replace_all(pattern = \"\\n\", replacement = \"\") \n  \nbike_price\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  [1] \"                                                ab 2699,00 €                                            \"\n#>  [2] \"                                                ab 499,00 €                                            \" \n#>  [3] \"                                                ab 2299,00 €                                            \"\n#>  [4] \"                                                ab 1499,00 €                                            \"\n#>  [5] \"                                                ab 1799,00 €                                            \"\n#>  [6] \"                                                ab 999,00 €                                            \" \n#>  [7] \"                                                ab 3299,00 €                                            \"\n#>  [8] \"                                                ab 799,00 €                                            \" \n#>  [9] \"                                                ab 3999,00 €                                            \"\n#> [10] \"                                                ab 4499,00 €                                            \"\n```\n:::\n\n```{.r .cell-code}\n# merging the two tables into one\nda2 <- tibble(bike_model, bike_price)\n\nda2 <- da2 %>%mutate(bike_price = as.character(gsub(\"€\", \"\", bike_price)))\nda2$bike_price <- as.character(gsub(\",\",\"\",da2$bike_price))\nda2$bike_price <- as.character(gsub(\"ab\",\"\",da2$bike_price))\n\n#d<-da2\nda2\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"bike_model\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"bike_price\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"PDQ\",\"2\":\"269900 \"},{\"1\":\"COUNT SOLO\",\"2\":\"49900 \"},{\"1\":\"THRILL HILL\",\"2\":\"229900 \"},{\"1\":\"GROUND CONTROL\",\"2\":\"149900 \"},{\"1\":\"ROOT MILLER\",\"2\":\"179900 \"},{\"1\":\"BONERO\",\"2\":\"99900 \"},{\"1\":\"SCRUB\",\"2\":\"329900 \"},{\"1\":\"THE BRUCE\",\"2\":\"79900 \"},{\"1\":\"ROOT MILLER PLUS\",\"2\":\"399900 \"},{\"1\":\"BONERO PLUS\",\"2\":\"449900 \"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nwrite_rds(da2, \"C:/Users/Shweta/Documents/GitHub/ss24-bdsb-shwetaambade/datascience/DataAcquistion2.R\")\nwrite.csv(x=da2, file=\"C:/Users/Shweta/Documents/GitHub/ss24-bdsb-shwetaambade/datascience/DataAcquistion2.csv\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}