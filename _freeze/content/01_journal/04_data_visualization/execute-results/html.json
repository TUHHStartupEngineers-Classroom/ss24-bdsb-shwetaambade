{
  "hash": "b3ef545935c00b3e657f459c0290997d",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nauthor: \"Shweta Ambade\"\n---\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-1_99e6665fda94a7d934a95cd11852707c'}\n\n```{.r .cell-code}\n#challenge1 \nlibrary(readr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'readr' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'tidyverse' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'ggplot2' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'tidyr' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'dplyr' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'lubridate' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.4     ✔ purrr     1.0.2\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\n# Read COVID-19 data\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 399281 Columns: 67\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n# Filter data for specified regions\nspecified_regions <- c(\"Europe\", \"France\", \"Germany\", \"Spain\", \"United Kingdom\", \"United States\")\nfiltered_data <- covid_data_tbl %>%\n  filter(location %in% specified_regions & !is.na(total_cases))\n\n# Plot cumulative COVID-19 cases over time for each region\nfiltered_data %>%\n  ggplot(aes(date, total_cases, color = location)) +\n  geom_line() +\n  scale_color_manual(values = c(Europe = \"#E41A1C\", France = \"#377EB8\", Germany = \"#4DAF4A\", \n                                Spain = \"#FF7F00\", `United Kingdom` = \"#984EA3\", `United States` = \"#FFFF33\")) +\n  labs(title = \"Cumulative COVID-19 Cases Over Time\",\n       x = \"Date\",\n       y = \"Total Cases\",\n       color = \"Region\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-2_cf576c0e501e1a67b4fccf8912e24edb'}\n\n```{.r .cell-code}\n# challenge2\n# Importing Libraries\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(ggthemes)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'ggthemes' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(maps)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'maps' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'maps'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> The following object is masked from 'package:purrr':\n#> \n#>     map\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggrepel)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: package 'ggrepel' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(purrr)\n\n# Loading and preprocessing data\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\") %>%\n  mutate(mort_rate = total_deaths / population) %>%\n  filter(!is.na(mort_rate)) %>% # Filter out rows where mort_rate is NA\n  group_by(location) %>%\n  summarise(Mortality_Rate = last(mort_rate, order_by = date)) %>% # Ensure proper ordering by date\n  mutate(location = case_when(\n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    location == \"Cote d'Ivoire\" ~ \"Ivory Coast\",\n    location == \"Czechia\" ~ \"Czech Republic\",\n    location == \"Eswatini\" ~ \"Swaziland\",\n    location == \"Timor\" ~ \"East Timor\",\n    location == \"Congo\" ~ \"Republic of Congo\",\n    location == \"Burma\" ~ \"Myanmar\",\n    TRUE ~ location\n  )) %>%\n  distinct()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 399281 Columns: 67\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n# Loading world map data\nworld <- map_data(\"world\")\n\n# Check for missing countries in the plot data\nmissing_countries <- setdiff(unique(covid_data_tbl$location), unique(world$region))\nprint(missing_countries)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  [1] \"Africa\"                           \"Antigua and Barbuda\"             \n#>  [3] \"Asia\"                             \"Bonaire Sint Eustatius and Saba\" \n#>  [5] \"British Virgin Islands\"           \"Europe\"                          \n#>  [7] \"European Union\"                   \"Faeroe Islands\"                  \n#>  [9] \"Gibraltar\"                        \"High income\"                     \n#> [11] \"Low income\"                       \"Lower middle income\"             \n#> [13] \"Micronesia (country)\"             \"North America\"                   \n#> [15] \"Oceania\"                          \"Saint Kitts and Nevis\"           \n#> [17] \"Saint Martin (French part)\"       \"Saint Vincent and the Grenadines\"\n#> [19] \"Sint Maarten (Dutch part)\"        \"South America\"                   \n#> [21] \"East Timor\"                       \"Trinidad and Tobago\"             \n#> [23] \"Tuvalu\"                           \"United States Virgin Islands\"    \n#> [25] \"Upper middle income\"              \"World\"\n```\n:::\n\n```{.r .cell-code}\n# Since the `maps` package does not have regions like \"Africa\", \"Asia\", \"Europe\", etc.,\n# these will not be plotted. For a more comprehensive visualization, consider using a more detailed map dataset.\n\n# Merging latitude/longitude data with COVID-19 mortality rate data\nplot_data <- left_join(world, covid_data_tbl, by = c(\"region\" = \"location\"))\n\n# Creating world map plot using geom_map with red color gradient\nggplot(plot_data) +\n  geom_map(aes(map_id = region, fill = Mortality_Rate), map = world) +\n  expand_limits(x = world$long, y = world$lat) +\n  \n  # Plot labeling\n  scale_fill_continuous(labels = scales::percent_format(accuracy = 0.001), low = \"#FFCCCB\", high = \"#8B0000\") +\n  labs(\n    title = \"Mortality Rate (deaths / population) due to COVID-19\",\n    subtitle = \"Distribution across the world\",\n    fill = \"Mortality Rate\"\n  ) +\n  \n  theme(\n    axis.line = element_blank(),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    title = element_text(face = \"bold\", color = \"Black\"),\n    legend.position = \"right\",\n    plot.background = element_rect(fill = \"white\")\n  )\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}