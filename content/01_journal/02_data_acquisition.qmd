---
title: "Data Acquisition"
author: "Shweta Ambade"
---

#API Challenge
#load packages library

library(RSQLite)
library(httr)
library(jsonlite)

# API key for OpenWeatherMap
api_key <- "1b974d3ef182f3948d75d15456fbbd20"

# City for which you want to fetch weather data
city <- URLencode("Berlin")

# API endpoint
url <- paste0("https://api.openweathermap.org/data/2.5/weather?q=", city, "&appid=", api_key)

# Make GET request to API
response <- GET(url)

# Check if request was successful
if (http_type(response) == "application/json") {
  # Parse JSON response
  weather_data <- fromJSON(content(response, "text"))
  
  # Extract relevant information
  temperature <- weather_data$main$temp - 273.15  # Convert temperature from Kelvin to Celsius
  humidity <- weather_data$main$humidity

 # Create dataframe to store weather information
  weather_df <- data.frame(
    "City" = city,
    "Temperature (Â°C)" = temperature,
    "Humidity (%)" = humidity,
    "Description" = weather_description
  )
  
  # Print weather dataframe
  print(weather_df)
  
  # If you want to save the dataframe to a table in a database, you can use RSQLite or any other database package
  
} else {
  cat("Failed to fetch weather data.\n")
}


#Web Scraping
# Load required libraries
library(tidyverse) 
library(rvest)     
library(xopen)     
library(jsonlite)  
library(glue)      
library(stringi)   

# URL of the competitor website
url_home <- "https://www.rosebikes.de/"

# Read the HTML content of the webpage
html_home <- read_html(url_home)

# Scrape both bike models and prices using updated CSS selectors
bike_data <- html_home %>% 
  html_nodes(".product-item") %>%
  map_df(~{
    bike_model <- .x %>% 
      html_node(".product-item__title") %>%
      html_text(trim = TRUE)
    
    bike_price <- .x %>% 
      html_node(".product-item__price") %>%
      html_text(trim = TRUE) %>%
      str_remove_all("\\D") %>% # Remove non-numeric characters
      as.numeric() # Convert to numeric
    
    tibble(bike_model, bike_price)
  })

# Check if prices are reasonable
summary(bike_data$bike_price)